{"version":3,"sources":["icon/logo.svg","reducers/settingsOn.ts","reducers/reponame.ts","reducers/buildList.ts","reducers/buildDetails.ts","reducers/lang.ts","reducers/index.ts","store.ts","helpers/time.ts","component/Footer/index.tsx","helpers/bemCn.ts","component/Header/index.tsx","component/Button/index.tsx","component/Text/index.tsx","component/Logo/index.tsx","component/Icon/index.tsx","pages/StartScreen.tsx","component/Form/index.tsx","component/Button/ButtonsField.tsx","component/Input/index.tsx","helpers/constant.ts","pages/Settings.tsx","component/Date/index.tsx","component/Card/index.tsx","component/PopUp/index.tsx","reducers/actions.ts","middleware/ajaxRequest.ts","pages/Build.tsx","component/Preloader/index.tsx","pages/BuildDetails.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","settingsOn","state","action","type","setName","name","buildList","build","finish","length","buildDetails","commitHash","log","loading","langStorieg","localStorage","getItem","console","setLang","lang","allReducers","combineReducers","setting","repName","reponame","preloadedState","window","__PRELOADED_STATE__","timeParam","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","currentLang","getState","Footer","className","href","Support","Learning","onClick","evt","preventDefault","setItem","location","reload","Copyright","cn","withNaming","e","m","v","Banner","Header","props","classes","undefined","class","link","to","text","children","styles","Button","style","Text","Logo","src","logoImg","alt","color","padding","size","lineHeight","weight","OpenSettings","Icon","StartScreen","useSelector","height","img","hide","Settings","Form","header","descripton","formRef","method","ref","onSubmit","ButtonsField","Input","inputEl","useRef","bindInput","bind","textMask","Array","isArray","head","mask","placeholder","id","defaultValue","value","placeholderChar","onChange","span","current","host","history","useHistory","dispatch","useDispatch","useState","error","setError","formEl","period","other","plurObj","setplurObj","useEffect","document","title","onSaveClick","a","bt1","currentTarget","bt2","nextSibling","setAttribute","formData","FormData","jsonObject","data","entries","key","Error","invalidInput","removeAttribute","fetch","headers","body","JSON","stringify","response","json","result","status","success","push","unknown","repoName","buildCommand","mainBranch","plural","Intl","PluralRules","select","indent","indentRigth","indentBottom","Save","Cancel","Date","startDate","duration","h","s","options","month","day","hour","minute","hour12","Card","time","date","start","toLocaleString","hours","seconds","getDuration","column","number","commit","branch","hash","author","PopUp","get","RunBuild","updateList","updateDetails","getBuildList","offset","limit","then","catch","onRebuild","Build","popup","setPopup","indentLeft","map","buildNumber","commitMessage","branchName","authorName","substring","ShowMore","Preloader","convert","Convert","newline","fg","BuildDetails","useParams","Promise","all","list","logJson","getBuildDetails","Rebuild","dangerouslySetInnerHTML","__html","toHtml","App","enLang","ruLang","check","res","checkSettings","component","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","contentType","indexOf","ready","unregister","checkValidServiceWorker","requestNotificationPermission","Notification","requestPermission","SW"],"mappings":"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","file":"static/js/main.64cc9887.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2d2123ee.svg\";","interface Action {\n  type: string;\n}\n\nconst settingsOn = (state: string = \"/\" , action: Action): string => {\n  switch (action.type) {\n    case \"settingsOn\":\n      return \"/build\";\n    default:\n      return state;\n  }\n}\n\nexport default settingsOn;","interface Action {\n  type: string,\n  name: string\n}\n\nconst setName = (state: string = \"\" , action: Action): string => {\n  switch (action.type) {\n    case \"setName\":\n      return action.name;\n    default:\n      return state;\n  }\n}\n\nexport default setName;","export interface Build {\n  id?: string,\n  configurationId?: string,\n  buildNumber?: number,\n  commitMessage?: string,\n  commitHash: string,\n  branchName?: string,\n  authorName?: string,\n  status?: string,\n  start?: string\n  duration?: number;\n}\ninterface Action {\n  type: string;\n  build: Array<Build>;\n  length: number;\n}\n\nexport interface BuildList {\n  build: Array<Build>;\n  finish: Boolean;\n}\n\nconst buildList = (state: BuildList = { build: [], finish: false } , action: Action) => {\n  switch (action.type) {\n    case \"updateList\":\n      if (action.build.length < action.length) {\n        return {\n          build: [...state.build, ...action.build],\n          finish: true\n        };\n      }\n      return {\n        build: [...state.build, ...action.build],\n        finish: false\n      };\n    default:\n      return state;\n  }\n}\n\nexport default buildList;","import { Build } from \"./buildList\";\n\nexport interface BuildDetails extends Build {\n  loading: Boolean;\n  log: string;\n}\n\ninterface Action {\n  type: string;\n  build: BuildDetails;\n}\n\nconst buildDetails = (state: BuildDetails = {commitHash: \"\", log: \"\", loading : true} , action: Action): BuildDetails => {\n  switch (action.type) {\n    case \"updateDetails\":\n      return { ...action.build, loading:false};\n    case \"loading\":\n      return { ...state, loading: true};\n    default:\n      return state;\n  }\n}\n\nexport default buildDetails;","interface Action {\n  type: string,\n  lang: string\n}\n\nconst langStorieg =  localStorage.getItem('lang') || 'en'\n\nconsole.log(langStorieg);\n\nconst setLang = (state: string = langStorieg , action: Action): string => {\n  switch (action.type) {\n    case \"setLang\":\n      return action.lang;\n    default:\n      return state;\n  }\n}\n\nexport default setLang;","import {combineReducers} from \"redux\";\nimport settingsOn from \"./settingsOn\";\nimport reponame from \"./reponame\";\nimport buildList from \"./buildList\";\nimport buildDetails from \"./buildDetails\";\nimport lang from \"./lang\";\n\nconst allReducers = combineReducers({\n  setting: settingsOn,\n  repName: reponame,\n  buildList:  buildList,\n  buildDetails: buildDetails,\n  lang: lang\n})\n\nexport default allReducers;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport allReducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { Build } from \"./reducers/buildList\";\nimport { BuildDetails } from \"./reducers/buildDetails\";\n\nexport interface StateInteface {\n  setting: string,\n  repName: string,\n  buildList: {\n    build: Array<Build>,\n    finish: Boolean\n  },\n  buildDetails: BuildDetails,\n  lang: string\n}\n\ndeclare global {\n  interface Window {\n    __PRELOADED_STATE__ : StateInteface;\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\n\n// Grab the state from a global variable injected into the server-generated HTML\nconst preloadedState = window.__PRELOADED_STATE__;\n\n// Allow the passed state to be garbage-collected\ndelete window.__PRELOADED_STATE__\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(allReducers, preloadedState, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n\n\n// {\n//   setting: '/build',\n//   repName: 'MoksS/homework-verstka-',\n//   buildList: {\n//     build: [\n//       {\n//         id: 'cac1b014-d5e3-4157-aaa6-8cfb453edf4b',\n//         configurationId: '78e95023-7140-4502-b685-39ca3d9b6abd',\n//         buildNumber: 6,\n//         commitMessage: 'пофиксил дизайн системы, вынес в глобальные перменные отступы, размеры шрифтов, и высоту в глобальные перменные\\n',\n//         commitHash: '95294dd38f14a3a308ef91eaf61e42e9edc45b7e',\n//         branchName: 'master',\n//         authorName: 'MoksS',\n//         status: 'Waiting'\n//       },\n//       {\n//         id: '7d36a424-6619-4a76-9d4f-0e1724593e67',\n//         configurationId: '78e95023-7140-4502-b685-39ca3d9b6abd',\n//         buildNumber: 5,\n//         commitMessage: 'пофиксил дизайн системы, вынес в глобальные перменные отступы, размеры шрифтов, и высоту в глобальные перменные\\n',\n//         commitHash: '95294dd38f14a3a308ef91eaf61e42e9edc45b7e',\n//         branchName: 'master',\n//         authorName: 'MoksS',\n//         status: 'Waiting'\n//       },\n//       {\n//         id: 'ba7beb8d-97c3-4efd-bb4d-bfd6c3b866c7',\n//         configurationId: '78e95023-7140-4502-b685-39ca3d9b6abd',\n//         buildNumber: 4,\n//         commitMessage: '2\\n',\n//         commitHash: 'f33f9539c65c4a1b888330235906c2e403edd57e',\n//         branchName: 'master',\n//         authorName: 'MoksS',\n//         status: 'Waiting'\n//       },\n//       {\n//         id: '9eca01d9-b350-4de4-b52a-0bde76d3217a',\n//         configurationId: '78e95023-7140-4502-b685-39ca3d9b6abd',\n//         buildNumber: 3,\n//         commitMessage: '2\\n',\n//         commitHash: 'f33f9539c65c4a1b888330235906c2e403edd57e',\n//         branchName: 'master',\n//         authorName: 'MoksS',\n//         status: 'Waiting'\n//       },\n//       {\n//         id: '5cbcd031-2c94-41a3-8c5e-6bc8146b25c3',\n//         configurationId: '78e95023-7140-4502-b685-39ca3d9b6abd',\n//         buildNumber: 2,\n//         commitMessage: '2\\n',\n//         commitHash: 'f33f9539c65c4a1b888330235906c2e403edd57e',\n//         branchName: 'master',\n//         authorName: 'MoksS',\n//         status: 'Waiting'\n//       }\n//     ],\n//     finish: false\n//   },\n//   buildDetails: {\n//     commitHash: '',\n//     log: '',\n//     loading: true\n//   }\n// }","import store from \"../store\";\n\ntype dataTime = string | number;\n\nconst currentLang = store.getState().lang;\n\nlet timeParam: { h: string, m:string, s: string}; \n\nif (currentLang === 'ru') {\n  timeParam = {\n    h: \"ч\",\n    m: \"мин\",\n    s: \" сек\"\n  }\n} else {\n  timeParam = {\n    h: \"h\",\n    m: \"min\",\n    s: \" sec\"\n  }\n}\n\nconst options = {\n  month: 'short', day: 'numeric',\n  hour: 'numeric', minute: 'numeric',\n  hour12: false\n};\n\n\nexport const getDate = (time: string) => {\n  const date = new Date(time);\n  return date.toLocaleString(currentLang, options);\n}\n\nexport const getDuration = (time: number) => {\n  let hours: dataTime = (time / 3600000) ^ 0;\n  let minute: dataTime = ((time / 60000) ^ 0) - hours * 60;\n  let seconds: dataTime = ((time / 1000) ^ 0) - minute * 60;\n\n  hours >= 1 ?\n    hours = `${hours} ${timeParam.h} ` :\n    hours = \"\";\n  \n  minute >= 1 ? \n    minute = `${minute} ${timeParam.m} ` :\n    minute = \"\";    \n\n  if (hours === \"\" ) {\n    if (seconds < 1) {\n      return minute;\n    }\n    return minute + seconds + timeParam.s;\n  }\n\n  return hours + minute;\n}","import React, { FC } from \"react\";\nimport \"./Footer.scss\";\nimport \"./Link.scss\";\nimport \"./Copyright.scss\";\nimport store from \"../../store\";\n\nconst currentLang = store.getState().lang;\n\nconst Footer: FC = () => {\n  const { lang } = window;\n\n  const onClickChangeLang = (evt: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    evt.preventDefault();\n\n    if (currentLang === 'ru') {\n      localStorage.setItem('lang', 'en');\n    } else {\n      localStorage.setItem('lang', 'ru');\n    }\n\n    window.location.reload();\n  }\n  return (\n    <footer className=\"Footer\">\n      <div className=\"Footer_Content\">\n        <div className=\"Link\">\n          <a className=\"Link_ATag\" href=\"/#\">{lang.Footer.Support}</a>\n          <a className=\"Link_ATag\" href=\"/#\">{lang.Footer.Learning}</a>\n          <a className=\"Link_ATag\" \n             href=\"/#\"\n             onClick={onClickChangeLang}\n          >\n            {lang.Footer.lang}</a>\n        </div>\n        <div className=\"Copyright\">\n          <p className=\"Copyright_Text\">{lang.Footer.Copyright}</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;","import { withNaming } from '@bem-react/classname';\n\nconst cn = withNaming({ e: '_', m: '__', v: '-' });\n\nexport default cn;","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport cn from \"../../helpers/bemCn\";\nimport \"./Header.scss\";\n\nconst Banner = cn('Header', 'Banner');\n\nexport interface HeadProps {\n  link?: string;\n  text: string;\n  class?: {\n    color?: \"black\"\n    lineHeight: \"l\"\n  }; \n}\n\nconst Header: FC<HeadProps> = (props) => {\n  let classes;\n\n  if (props.class === undefined) {\n    classes = \"Header_Banner Header_Banner__color-default\"\n  } else {\n    classes = Banner(props.class);\n  }\n\n  return (\n    <header className=\"Header\">\n    <div className=\"Header_Content\">\n    \n    {props.link ? \n      <Link to={props.link}>\n        <h1 className={classes}>{props.text}</h1>\n      </Link>\n      : <h1 className={classes}>{props.text}</h1>\n    }\n    {props.children}\n    </div>\n  </header>\n  )\n\n};\n\nexport default Header;","import React, { MouseEvent, FC } from \"react\";\nimport cn from \"../../helpers/bemCn\";\nimport \"./Buttons.scss\";\n\nconst styles = cn('Button');\n\nexport interface ButtonProps {\n  style?: {\n    color?: \"close\" | \"action\" | \"control\";\n    padding?: \"action\" | \"control\";\n    indentRigth?: \"s\";\n    indentBottom?: \"s\" | \"xl\";\n    height?: \"action\" | \"default\";\n    indentLeft?: \"s\"\n  };\n  onClick?(event: MouseEvent<HTMLButtonElement>): void;\n}\n\nconst Button: FC<ButtonProps> = (props) => {\n  let classes: string;\n\n  if (props.style === undefined) {\n    classes = \"Button Button__color-control Button__padding-control Button__height-default\"\n  } else {\n    classes = styles(props.style);\n  }\n\n  return (\n    <button \n      className={classes}\n      onClick={props.onClick}>\n      {props.children}\n    </button>\n  )\n\n};\n\nexport default Button;","import React, { FC } from \"react\";\nimport cn from \"../../helpers/bemCn\";\nimport \"./Text.scss\";\n\nconst styles = cn('Text');\n\nexport interface TextProps {\n  style?: {\n    size?: \"m\" | \"l\";\n    lineHeight?: \"xxxxl\" | \"xxl\";\n    weight?: \"small\" | \"normal\";\n    color?: \"default\" | \"red\";\n    hide?: \"on\";\n  }; \n}\n\nconst Text: FC<TextProps> = (props) => {\n  let classes;\n\n  if (props.style === undefined) {\n    classes = \"Text\"\n  } else {\n    classes = styles(props.style);\n  }\n\n  return (\n    <span className={classes}>\n      {props.children}\n    </span>\n  )\n};\n\nexport default Text;","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"./../Button\";\nimport Text from \"./../Text\";\nimport \"./Logo.scss\";\nimport logoImg from \"../../icon/logo.svg\"\n\nconst Logo: FC = () => {\n  const { lang } = window;\n\n  return (\n    <>\n      <div className=\"Logo\">\n        <img className=\"Logo_Img\" src={logoImg} alt=\"LOGO\" />\n        <p className=\"Logo_Text\">\n          {lang.Logo.Text}\n        </p>\n        <Link to=\"/settings\">\n          <Button style={{ color: \"action\", padding: \"action\" }}>\n            <Text style={{ size: \"m\", lineHeight: \"xxxxl\", weight: \"small\", color: \"default\" }}>\n              {lang.Logo.Button.OpenSettings}\n            </Text>\n          </Button>\n        </Link>\n      </div>\n    </>\n  )\n}\n\nexport default Logo;","import React, { FC } from \"react\";\nimport cn from \"../../helpers/bemCn\";\nimport \"./Icon.scss\";\n\nconst styles = cn('Icon');\n\nexport interface IconProps {\n  style?: {\n    size?: \"xs\" | \"xl\";\n    img?: \"close\" | \"control\" | \"play\" | \"rebuild\";\n  };\n}\n\nconst Icon: FC<IconProps> = (props) => {\n  let classes;\n\n  if (props.style === undefined) {\n    classes = \"Icon\"\n  } else {\n    classes = styles(props.style);\n  }\n\n  return <span className={classes} />\n};\n\nexport default Icon;","import React, { FC } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\"\nimport Header from \"../component/Header\";\nimport Logo from \"../component/Logo\";\nimport Button from \"../component/Button\";\nimport Icon from \"../component/Icon\";\nimport Text from \"../component/Text\";\nimport {useSelector} from \"react-redux\";\nimport { StateInteface } from \"../store\";\n\nconst StartScreen: FC = () => {\n  const state = useSelector((state: StateInteface) => state.setting);\n  \n  const { lang } = window;\n\n  return(\n  state !== \"/\" ? <Redirect to=\"/build\"/> :\n    <>\n      <Header text=\"School CI server\">\n        <Link to=\"/settings\">\n          <Button style={{ color: \"control\", padding: \"control\", height: \"default\" }}>\n            <Icon style={{ size: \"xl\", img: \"control\" }} />\n            <Text style={{ size: \"m\", lineHeight: \"xxl\", weight: \"small\", color: \"default\", hide: \"on\" }}>\n              {lang.StartScreen.Button.Settings}\n            </Text>\n          </Button>\n        </Link>\n      </Header>\n\n      <div className=\"Content Content__center-on\">\n        <Logo />\n      </div>\n    </>\n  )\n};\n\nexport default StartScreen;\n","import React, { FC, RefObject } from \"react\";\nimport \"./Form.scss\";\n\nexport interface FormProps {\n  header: string;\n  descripton: string;\n  name: string;\n  method: string;\n  formRef: RefObject<HTMLFormElement>;\n}\n\nconst Form: FC<FormProps> = ({header, descripton, children, name, formRef, method}) => {\n\n  return (\n    <form className=\"Form\" name={name} ref={formRef} method={method} onSubmit={(e) => e.preventDefault()} onClick={(e) => e.preventDefault()}>\n      <h2 className=\"Form_H2\">{header}</h2>\n      <p className=\"Form_Description\">{descripton}</p>\n      {children}\n    </form>\n  )\n}\n\nexport default Form;","import React, { FC } from \"react\";\nimport { withNaming } from '@bem-react/classname';\n\nconst cn = withNaming({ e: '_', m: '__', v: '-' })\n\nconst styles = cn('ButtonsField');\n\nexport interface ButtonsFieldProps {\n  style?: {\n    column?: \"off\",\n    indent?: \"topXl\"\n  };\n}\n\n\nconst ButtonsField: FC<ButtonsFieldProps> = (props) => {\n  let classes;\n\n  if (props.style === undefined) {\n    classes = \"ButtonsField\"\n  } else {\n    classes = styles(props.style);\n  }\n\n  return (\n    <div className={classes}>\n      {props.children}\n    </div>\n  )\n\n};\n\nexport default ButtonsField;","import React, { useRef, FC } from \"react\";\nimport Button from \"./../Button\";\nimport Icon from \"./../Icon\";\nimport MaskedInput from 'react-text-mask'\nimport \"./Input.scss\";\n\nexport interface InputProps {\n  bind?: boolean;\n  head?: string;\n  placeholder?: string;\n  id?: string;\n  textMask?: RegExp[];\n  name?: string;\n  value?: string | number;\n  type?: string;\n  span?: string; \n  onChange? (evt :React.ChangeEvent<HTMLInputElement>): void;\n}\n\nconst Input: FC<InputProps> = (props) => {\n  const inputEl = useRef<HTMLInputElement>(null);\n\n  const clearInput = () => {\n    if (inputEl.current) {\n      inputEl.current.value = \"\";\n    }\n  }\n\n  const bindInput = props.bind ? <span className=\"Input_Bind\"> *</span> : \"\";\n  let input;\n\n  if (props.textMask !== undefined && Array.isArray(props.textMask)) {\n    input = (\n      <div className=\"Input Input__flex-active\">\n        <p className=\"Input_Head Input_Head__indent-none Input_Head__indent-rigth\">{props.head}</p>\n        <div className=\"Input_Field  Input_Field__sizeWidth-small Input_Field__position-rigth\">\n          <MaskedInput \n            mask={props.textMask} \n            className=\"Input_Input Input_Input__sizeWidth-small\" \n            placeholder={props.placeholder}\n            id={props.id} \n            name={props.name}\n            defaultValue={props.value}\n            placeholderChar={\"\\u2000\"}\n            onChange={props.onChange}\n          />\n          {/* <input className=\"Input_Input Input_Input__sizeWidth-small\" type=\"text\" maxLength=\"2\" placeholder=\"10\" name=\"minutes\" defaultValue=\"10\" /> */}\n        </div>\n        {props.span !== undefined ? <span className=\"Input_Span\">{props.span}</span> : \"\"}\n      </div>\n    )\n  } else {\n    input = (\n      <div className=\"Input\">\n        <p className=\"Input_Head\">{props.head || \"\"}{bindInput}</p>\n        <div className=\"Input_Field\">\n          <input\n            className=\"Input_Input\"\n            type={props.type}\n            placeholder={props.placeholder}\n            name={props.name} \n            id={props.id}\n            defaultValue={props.value}\n            ref={inputEl}\n          />\n          <Button style={{ color: \"close\" }} onClick={clearInput}>\n            <Icon style={{ size: \"xs\", img: \"close\" }} />\n          </Button>\n        </div>\n        {props.span !== undefined ? <span className=\"Input_Span\">{props.span}</span> : \"\"}\n      </div>\n    )\n  }\n\n  return input;\n};\n\nexport default Input;","export const host = `http://localhost:3000`;","import React, { useEffect, useRef, useState, MouseEvent, FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../component/Header\";\nimport Form from \"../component/Form\";\nimport ButtonsField from \"../component/Button/ButtonsField\";\nimport Button from \"../component/Button\";\nimport Input from \"../component/Input\";\nimport Text from \"../component/Text\";\nimport { host } from \"../helpers/constant\";\nimport { useDispatch } from \"react-redux\";\nimport {useSelector} from \"react-redux\";\nimport { StateInteface } from \"../store\";\n\nconst Settings: FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const state = useSelector((state: StateInteface) => state.setting);\n  const currentLang = useSelector((state: StateInteface) => state.lang);\n\n  const [error, setError] = useState(\"\");\n  const formEl = useRef<HTMLFormElement>(null);\n\n  const { lang } = window;\n\n  const [plurObj, setplurObj] = useState({\n    head: lang.Settings.Input.period.head.other,\n    span: lang.Settings.Input.period.span.other\n  })\n\n\n  useEffect(() => {\n    document.title = \"Settings\";\n  }, []);\n\n  const Back = () => {\n    history.push(state);\n  }\n\n  const onSaveClick = async (e: MouseEvent<HTMLButtonElement>) => {\n    const bt1 = e.currentTarget;\n    const bt2 = bt1.nextSibling as HTMLButtonElement;\n\n    bt1.setAttribute(\"disabled\", \"disabled\");\n    bt2.setAttribute(\"disabled\", \"disabled\");\n\n    try {\n      // Осторожно, КОСТЫЛИ и неправильный код\n      const formData = new FormData(formEl.current!);\n      let jsonObject: any = {};\n\n      // вообще без понятия как тут сделать, возможно это решается полностью переписыванием кода\n      const data = formData.entries() as unknown as Array<[string, string | number]>;\n\n      for (const [key, value] of data) {\n        if ((key === \"repoName\" || key === \"buildCommand\") && value === \"\") {\n          setError(lang.Settings.Error.invalidInput);\n          bt1.removeAttribute(\"disabled\");\n          bt2.removeAttribute(\"disabled\");\n          return;\n        }\n        jsonObject[key] = value;\n      }\n      setError(\"\");\n\n      const response = await fetch(`${host}/api/settings`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(jsonObject)\n      });\n\n      const result = await response.json();\n\n      if(response.status >= 400) {\n        setError(result.data);\n        bt1.removeAttribute(\"disabled\");\n        bt2.removeAttribute(\"disabled\");\n        return;\n      }\n      if (!result.success) {\n        setError(result.error);\n        bt1.removeAttribute(\"disabled\");\n        bt2.removeAttribute(\"disabled\");\n        return;\n      }\n      dispatch({type: \"settingsOn\"});\n      dispatch({\n        type: \"setName\", \n        name: jsonObject[\"repoName\"]\n      })\n      return history.push(\"/build\");\n\n    } catch (error) {\n      // если упал сервер или пропал интернет - пишешм что то, но не сегодня)\n      // отправляем логи\n      // и единственное мое универсальное решение, конечно же не идеальное)))\n      setError(lang.Settings.Error.unknown);\n      bt1.removeAttribute(\"disabled\");\n      bt2.removeAttribute(\"disabled\");\n    }\n\n    bt1.removeAttribute(\"disabled\");\n    bt2.removeAttribute(\"disabled\");\n  };\n\n  const onChangeInput = (evt: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = evt.currentTarget;\n    const plural = new Intl.PluralRules(currentLang).select(+value);\n    setplurObj({\n      head: lang.Settings.Input.period.head[plural],\n      span: lang.Settings.Input.period.span[plural]\n    })\n  }\n\n  return (\n    <>\n      <Header text=\"School CI server\" />\n\n      <div className=\"Content\">\n        <Form\n          header={lang.Settings.Form.header}\n          descripton={lang.Settings.Form.descripton}\n          name=\"settings\"\n          method=\"post\"\n          formRef={formEl}\n        >\n\n          <Input\n            head={lang.Settings.Input.repoName.head}\n            type=\"text\"\n            placeholder={lang.Settings.Input.repoName.placeholder}\n            name=\"repoName\"\n            bind={true}\n          />\n\n          <Input\n            head={lang.Settings.Input.buildCommand.head}\n            type=\"text\"\n            placeholder={lang.Settings.Input.buildCommand.placeholder}\n            name=\"buildCommand\"\n            bind={true}\n          />\n\n          <Input\n            head={lang.Settings.Input.mainBranch.head}\n            type=\"text\"\n            placeholder={lang.Settings.Input.mainBranch.placeholder}\n            name=\"mainBranch\"\n          />\n\n          <Input\n            head={plurObj.head}\n            placeholder={lang.Settings.Input.period.placeholder}\n            name=\"period\"\n            span={plurObj.span}\n            textMask={[/\\d/, /\\d/]}\n            onChange={onChangeInput}\n          />\n          <Text style={{size: \"l\", weight: \"normal\", lineHeight: \"xxl\", color: \"red\"}}>{error}</Text>\n\n          <ButtonsField style={{ indent: \"topXl\" }}>\n            <Button\n              style={{ indentRigth: \"s\", indentBottom: \"s\", height: \"action\", color: \"action\", padding: \"action\" }}\n              onClick={onSaveClick}\n            >\n              <Text style={{ size: \"m\", lineHeight: \"xxxxl\", weight: \"small\", color: \"default\" }}>\n                {lang.Settings.Button.Save}\n              </Text>\n            </Button>\n            <Button \n              style={{ color: \"control\", padding: \"action\", height: \"action\", indentBottom: \"xl\" }}\n              onClick={Back}\n            >\n              <Text style={{ size: \"m\", lineHeight: \"xxxxl\", weight: \"small\", color: \"default\" }}>\n                {lang.Settings.Button.Cancel}\n              </Text>\n            </Button>\n          </ButtonsField>\n        </Form>\n      </div>\n    </>\n  )\n};\n\nexport default Settings;","import React, { FC } from \"react\";\nimport \"./Date.scss\";\n\nexport interface DateProps {\n  startDate: string;\n  duration: string;\n};\n\nconst Date: FC<DateProps> = (props) => {\n\n  return (\n    <div className=\"Date\">\n      <div className=\"Date_Day\">\n        <span className=\"Icon Icon__indentRigth-xs Icon__size-xs Icon__img-calendar\"></span>\n        <span className=\"Text Text__size-m Text__weight-small Text__lineHeight-l Text__color-secondary Text__indentRigth-m Date__DinamicColor-on\">\n          {props.startDate}\n        </span>\n      </div>\n      <div className=\"Date_Hour\">\n        <span className=\"Icon Icon__indentRigth-xs Icon__size-xs Icon__img-clock\"></span>\n        <span className=\"Text Text__size-m Text__weight-small Text__lineHeight-l Text__color-secondary Date__DinamicColor-on\">\n          {props.duration}\n        </span>\n      </div>\n    </div>\n  )\n};\n\nexport default Date;","import React, { FC } from \"react\";\nimport Date from \"../Date\";\nimport { getDate, getDuration } from \"../../helpers/time\";\nimport \"./Card.scss\";\n\nexport interface CardProps {\n  start?: string;\n  duration?: number;\n  column?: boolean;\n  status?: string;\n  number?: number;\n  commit?: string;\n  branch?: string;\n  hash?: string;\n  author?: string;\n};\n\nconst Card: FC<CardProps> = (props) => {\n  const date = props.start ? getDate(props.start) : false;\n\n  const duration = getDuration(props.duration!);\n\n  const status = `Icon Icon__indentRigth-s Icon__size-default Icon__img-${props.status}`\n\n  return (\n    <div className={props.column ? \"Card Card__indentBottom-s Card__column-on\" : \"Card Card__indentBottom-s\"}>\n      <div className=\"Card_Info Card__flexBasic-80\">\n        <div className=\"Card_Build Card_Build__indentBottom-s\">\n          <div className=\"Card_Status\">\n            <span className={status}></span>\n            <span className=\"Text Text__size-l Text__weight-normal Text__lineHeight-xl Text__color-green\">#{props.number}</span>\n          </div>\n          <span className=\"Text Text__indentLeft-xs Text__size-s Text__weight-small Text__lineHeight-xl Text__color-default\">{props.commit}</span>\n        </div>\n        <div className=\"Card_Commit Card_Commit__indentLeft-xxl\">\n          <div className=\"Card_Branch Card_Branch__indentRigth-l \">\n            <span className=\"Icon Icon__indentRigth-xs Icon__size-xs Icon__img-code\"></span>\n            <span className=\"Text Text__indentRigth-xs Text__size-m Text__weight-small Text__lineHeight-l Text__color-default\">{props.branch}</span>\n            <span className=\"Text Text__indentRigth-xs Text__size-m Text__weight-small Text__lineHeight-l Text__color-hash\">{props.hash}</span>\n          </div>\n          <div className=\"Card_User\">\n            <span className=\"Icon Icon__indentRigth-xs Icon__size-xs Icon__img-user\"></span>\n            <span className=\"Text Text__size-m Text__weight-small Text__lineHeight-l Text__color-default\">{props.author}</span>\n          </div>\n        </div>\n      </div>\n      {date === false ? \n        \"\" :\n        <Date\n        startDate={date}\n        duration={duration}\n      />\n      }\n    </div>\n\n  );\n}\n\nexport default Card;","import React, { useRef, useState, FC, MouseEvent } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Form from \"./../Form\";\nimport Input from \"./../Input\";\nimport Button from \"./../Button\";\nimport ButtonsField from \"./../Button/ButtonsField\";\nimport { host } from \"../../helpers/constant\";\nimport Text from \"./../Text\";\nimport \"./PopUp.scss\";\n\nexport interface PopUpProps {\n  hide(event: MouseEvent<HTMLButtonElement>): void;\n}\n\nconst PopUp: FC<PopUpProps> = ({ hide }) => {\n  const [error, setError] = useState(\"\");\n  const formEl = useRef<HTMLFormElement>(null);\n  const history = useHistory();\n\n  const { lang } = window;\n\n  const onSaveClick= async (e: MouseEvent<HTMLButtonElement> ) => {\n    const bt1 = e.currentTarget;\n    const bt2 = bt1.nextSibling as HTMLButtonElement;\n\n    bt1.setAttribute(\"disabled\", \"disabled\");\n    bt2.setAttribute(\"disabled\", \"disabled\");\n\n    try {\n      setError(\"\");\n\n      const formData = new FormData(formEl.current!);\n\n      const response = await fetch(`${host}/api/builds/${formData.get(\"commitHash\")}`, {\n        method: 'POST'\n      });\n\n      const result = await response.json();\n\n      if(response.status >= 400) {\n        setError(result.data);\n        bt1.removeAttribute(\"disabled\");\n        bt2.removeAttribute(\"disabled\");\n        return;\n      }\n\n      history.push(`/build/${result.data.id}`);\n\n    } catch (error) {\n      setError(error);\n      console.log(error);\n    }\n\n    bt1.removeAttribute(\"disabled\");\n    bt2.removeAttribute(\"disabled\");\n  };\n\n  return (\n    <div className=\"PopUp\">\n      <Form\n        header={ lang.PopUp.Form.header }\n        descripton={ lang.PopUp.Form.descripton }\n        name=\"newBuild\"\n        method=\"post\"\n        formRef={formEl}\n      >\n        <Input\n          type=\"text\"\n          placeholder={ lang.PopUp.Input.commitHash.placeholder }\n          name=\"commitHash\"\n        />\n\n        <ButtonsField>\n          <Button\n            style={{ indentRigth: \"s\", indentBottom: \"s\", height: \"action\", color: \"action\", padding: \"action\" }}\n            onClick={onSaveClick}\n          >\n            <Text style={{ size: \"m\", lineHeight: \"xxxxl\", weight: \"small\", color: \"default\" }}>\n            { lang.PopUp.Button.RunBuild }\n            </Text>\n          </Button>\n          <Button\n            onClick={hide}\n            style={{ color: \"close\", padding: \"action\", height: \"action\", indentBottom: \"xl\" }}>\n            <Text style={{ size: \"m\", lineHeight: \"xxxxl\", weight: \"small\", color: \"default\" }}>\n            { lang.PopUp.Button.Cancel }\n            </Text>\n          </Button>\n        </ButtonsField>\n        <Text style={{size: \"l\", weight: \"normal\", lineHeight: \"xxl\", color: \"red\"}}>{error}</Text>\n      </Form>\n    </div>\n  )\n}\n\nexport default PopUp;","export const updateList = (build = [], length = 5) => {\n  return {\n    type: \"updateList\",\n    build: build,\n    length: length\n  };\n};\n\nexport const settingsOn = () => {\n  return {\n    type: \"settingsOn\"\n  };\n};\n\nexport const updateDetails = (build = []) => {\n  return {\n    type: \"updateDetails\", \n    build: build\n  };\n}; \n\nexport const setName = (name: string) => {\n  return {\n    type: \"setName\", \n    name: name\n  };\n};\n\nexport const loading = () => {\n  return {\n    type: \"loading\"\n  }\n}","import { updateList, updateDetails, loading } from \"../reducers/actions\";\nimport { host } from \"../helpers/constant\";\nimport { BuildDetails } from \"../reducers/buildDetails\";\nimport { History } from \"history\";\n\n\nexport const getBuildList = (offset = 0, limit = 5) => {\n  return (dispatch: (arg0: { type: string; build: never[]; length: number; }) => void) => {\n\n    fetch(`${host}/api/builds?offset=${offset}&limit=${limit}`)\n      .then(e => e.json())\n      .then((e) => {\n        dispatch(updateList(e.data, limit));\n      })\n      .catch(error => console.log(error));\n  };\n}\n\nexport const getBuildDetails = (number: string, history: History) => {\n  return async (dispatch: (arg0: { type: string; build?: never[]; }) => void)  => {\n    try {\n      dispatch(loading());\n      const [list, log] = await Promise.all([\n        fetch(`${host}/api/builds/${number}`),\n        fetch(`${host}/api/builds/${number}/logs`)\n      ]);\n      const [json, logJson] = await Promise.all([\n        list.json(),\n        log.json()\n      ]);\n  \n      json.data.log = logJson.data;\n      dispatch(updateDetails(json.data));\n    } catch (error) {\n      console.log(error);\n      history.push(`/build`);\n    }\n  }\n};\n\nexport const onRebuild = async (buildDetails: BuildDetails, history: History) => {\n  try {\n    const response = await fetch(`${host}/api/builds/${buildDetails.commitHash}`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(buildDetails)\n    });\n\n    const result = await response.json();\n\n    history.push(`/build/${result.data.id}`);\n\n  } catch (error) {\n    console.log(error);\n  }\n};","import React, { useEffect, useState, FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../component/Header\";\nimport Button from \"../component/Button\";\nimport ButtonsField from \"../component/Button/ButtonsField\";\nimport Icon from \"../component/Icon\";\nimport Text from \"../component/Text\";\nimport Card from \"../component/Card\";\nimport PopUp from \"../component/PopUp\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getBuildList } from \"../middleware/ajaxRequest\";\nimport { StateInteface } from \"../store\";\nimport { Build as BuildInteface } from \"../reducers/buildList\";\n\nconst Build: FC = () => {\n  const repName = useSelector((state: StateInteface) => state.repName);\n  const buildList = useSelector((state: StateInteface) => state.buildList);\n  const dispatch = useDispatch();\n\n  const { lang } = window;\n\n  const [popup, setPopup] = useState(false);\n\n  const showPopUp = () => setPopup(true);\n\n  useEffect(() => {\n\n    document.title = \"Build List\";\n\n    if (buildList.build.length < 1) {\n      dispatch(getBuildList());\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Header\n        text={repName}\n        class={{ color: \"black\", lineHeight: \"l\" }}\n        link=\"/build\"\n      >\n\n        <ButtonsField style={{ column: \"off\" }}>\n          <Button\n            style={{ color: \"control\", padding: \"control\", height: \"default\" }}\n            onClick={showPopUp}\n          >\n            <Icon style={{ size: \"xl\", img: \"play\" }} />\n            <Text style={{ size: \"m\", lineHeight: \"xxl\", weight: \"small\", color: \"default\", hide: \"on\" }}>\n              {lang.Build.Button.RunBuild}\n            </Text>\n          </Button>\n\n          <Link to=\"/settings\">\n            <Button style={{ color: \"control\", indentLeft: \"s\", height: \"default\" }}>\n              <Icon style={{ size: \"xl\", img: \"control\" }} />\n            </Button>\n          </Link>\n        </ButtonsField>\n      </Header>\n\n      <div className=\"Content\">\n        {buildList.build.map((e: BuildInteface) =>{ \n          if (e.commitHash === undefined) {\n            window.location.reload();\n          }\n\n          return (\n          <Link to={`/build/${e.id}`} key={e.buildNumber}>\n            <Card\n              status={e.status}\n              number={e.buildNumber}\n              commit={e.commitMessage}\n              branch={e.branchName}\n              author={e.authorName}\n              hash={e.commitHash.substring(0, 7)}\n              start={e.start}\n              duration={e.duration}\n            />\n          </Link>\n        )}\n        )}\n        {buildList.finish ? \"\" :\n          <ButtonsField>\n            <Button\n              style={{ color: \"control\", padding: \"action\", indentBottom: \"xl\" }}\n              onClick={(e) => dispatch(getBuildList(buildList.build.length))}\n            >\n              <Text style={{ size: \"m\", lineHeight: \"xxxxl\", weight: \"small\", color: \"default\" }}>\n              {lang.Build.Button.ShowMore}\n              </Text>\n            </Button>\n          </ButtonsField>\n        }\n      </div>\n      {popup ? \n        <PopUp hide={() => setPopup(false)} />\n        :\n        \"\"\n      }\n    </>\n  )\n};\n\nexport default Build;","import React, { FC } from \"react\";\nimport \"./Preloader.scss\";\n\nconst Preloader: FC = () => {\n  return (\n    <div className=\"sk-center\">\n      <div className=\"sk-circle\">\n        <div className=\"sk-circle1 sk-child\"></div>\n        <div className=\"sk-circle2 sk-child\"></div>\n        <div className=\"sk-circle3 sk-child\"></div>\n        <div className=\"sk-circle4 sk-child\"></div>\n        <div className=\"sk-circle5 sk-child\"></div>\n        <div className=\"sk-circle6 sk-child\"></div>\n        <div className=\"sk-circle7 sk-child\"></div>\n        <div className=\"sk-circle8 sk-child\"></div>\n        <div className=\"sk-circle9 sk-child\"></div>\n        <div className=\"sk-circle10 sk-child\"></div>\n        <div className=\"sk-circle11 sk-child\"></div>\n        <div className=\"sk-circle12 sk-child\"></div>\n      </div>\n    </div>\n  )\n};\n\nexport default Preloader;","import React, { useEffect } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport Convert from \"ansi-to-html\";\nimport Header from \"../component/Header\";\nimport ButtonsField from \"../component/Button/ButtonsField\";\nimport Button from \"../component/Button\";\nimport Icon from \"../component/Icon\";\nimport Text from \"../component/Text\";\nimport Card from \"../component/Card\";\nimport Preloader from \"../component/Preloader\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getBuildDetails, onRebuild } from \"../middleware/ajaxRequest\";\nimport { StateInteface } from \"../store\";\n\nconst convert = new Convert({ newline: true, fg: \"#000\" });\n\nfunction BuildDetails() {\n  const history = useHistory();\n  const repName = useSelector((state: StateInteface) => state.repName);\n  const buildDetails = useSelector((state: StateInteface) => state.buildDetails);\n  const dispatch = useDispatch();\n  const { number } = useParams();\n\n  const { lang } = window;\n  \n  useEffect(() => {\n    document.title = `Build ${number}`;\n\n    if (number) {\n      dispatch(getBuildDetails(number, history));\n    }\n    // eslint-disable-next-line\n  }, [number]);\n\n  return (\n    <>\n      <Header\n        text={repName}\n        class={{ color: \"black\", lineHeight: \"l\" }}\n        link={\"/build\"}\n      >\n\n        <ButtonsField style={{ column: \"off\" }}>\n          <Button\n            style={{ color: \"control\", padding: \"control\", height: \"default\" }}\n            onClick={() => onRebuild(buildDetails, history)}\n          >\n            <Icon style={{ size: \"xl\", img: \"rebuild\" }} />\n            <Text style={{ size: \"m\", lineHeight: \"xxl\", weight: \"small\", color: \"default\", hide: \"on\" }}>\n              {lang.BuildDetails.Button.Rebuild}\n              </Text>\n          </Button>\n          <Link to=\"/settings\">\n            <Button style={{ color: \"control\", indentLeft: \"s\", height: \"default\" }}>\n              <Icon style={{ size: \"xl\", img: \"control\" }} />\n            </Button>\n          </Link>\n        </ButtonsField>\n      </Header>\n\n      <div className=\"Content\">\n        {buildDetails.loading ? \n          <Preloader /> :\n          <>\n            <Card\n              status={buildDetails.status}\n              number={buildDetails.buildNumber}\n              commit={buildDetails.commitMessage}\n              branch={buildDetails.branchName}\n              author={buildDetails.authorName}\n              hash={buildDetails.commitHash.substring(0, 7)}\n              start={buildDetails.start}\n              duration={buildDetails.duration}\n            />\n            <div className=\"Log\" dangerouslySetInnerHTML={{ __html: convert.toHtml(buildDetails.log) }}></div>\n          </>\n        }\n        {/* опасно, понимаю,но не знаю как сделать правильно, траспилировать? проверять на тег скрипт, или библиотека сама все делает?*/}\n        {/* <div className=\"Log\" dangerouslySetInnerHTML={{ __html: convert.toHtml('\\x1b[30mblack\\x1b[37mwhite')}}>  */}\n      </div>\n    </>\n  )\n};\n\nexport default BuildDetails;","import React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Footer from \"./component/Footer\";\nimport './sass/App.scss';\nimport StartScreen from './pages/StartScreen';\nimport Settings from './pages/Settings';\nimport Build from './pages/Build';\nimport BuildDetails from './pages/BuildDetails';\nimport { host } from \"./helpers/constant\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { settingsOn, setName } from \"./reducers/actions\";\nimport { StateInteface } from \"./store\";\nimport enLang from \"./lang/en.json\";\nimport ruLang from \"./lang/ru.json\";\n\nfunction App() {\n  const state = useSelector((state: StateInteface) => state.setting);\n  const lang = useSelector((state: StateInteface) => state.lang);\n  const dispatch = useDispatch();\n\n  if (lang === 'en') {\n    window.lang = enLang;\n  } else {\n    window.lang = ruLang;\n  }\n\n  useEffect(() => {\n    const checkSettings = async () => {\n      try {\n        const check = await fetch(`${host}/checkSettings`);\n        const res = await check.json();\n        if (res.repoName !== undefined) {\n          dispatch(settingsOn());\n          dispatch(setName(res.repoName));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    checkSettings();\n  }, [dispatch]);\n\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route component={StartScreen} exact path=\"/\" />\n          <Route component={Settings} exact path=\"/settings\" />\n          <Route component={Build} exact path=\"/build\" />\n          <Route component={BuildDetails} exact path=\"/build/:number\" />\n          <Route path=\"*\">\n            <Redirect to={state} />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        const requestNotificationPermission = async () => {\n          const permission = await window.Notification.requestPermission();\n          if (permission !== 'granted') {\n            console.log(\"доступ к push уведомлениям запрещен\");\n          }\n        }\n\n        navigator.serviceWorker.ready.then((registration) => {\n          console.log(\"сервис воркер зарегистрирован\");\n          requestNotificationPermission();\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport * as SW from \"./serviceWorker\";\nimport '@formatjs/intl-pluralrules/polyfill';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nSW.register();\n"],"sourceRoot":""}